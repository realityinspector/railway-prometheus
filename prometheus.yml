global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # Evaluate rules every 15 seconds.
  scrape_timeout:      10s # Timeout for scrape requests

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'railway-prom'
    environment: '${ENVIRONMENT:-live}' # Default to live if not specified

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    scrape_timeout: 4s

    static_configs:
      - targets: ['localhost:9090']
  
  - job_name: 'demo_application'
    scrape_interval: 5s
    scrape_timeout: 4s
    static_configs:
      - targets: ['demo.do.prometheus.io:9090']

  - job_name: 'fastapi_metrics'
    scrape_interval: 5s
    scrape_timeout: 4s
    static_configs:
      - targets: ['${MAIN_FASTAPI_URL}']
    metrics_path: '/metrics'
    scheme: 'http'

  - job_name: 'test_data_metrics'
    scrape_interval: 5s
    scrape_timeout: 4s
    static_configs:
      - targets: ['${DATABASE_ORCHESTRATOR_URL}']
    metrics_path: '/metrics'
    scheme: 'http'
    params:
      environment: ['test']

  # - job_name: 'postgres'
  #   scrape_interval: 5s
  #   static_configs:
  #     - targets: ['localhost:9187']

  # - job_name: 'mysql'
  #   scrape_interval: 5s
  #   static_configs:
  #     - targets: ['localhost:9104']